version: '3.8'

volumes:
  client:
    driver: local
  api:
    driver: local

services:
  client:
    container_name: ${COMPOSE_PROJECT_NAME}-client
    build:
      context: ./client
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - client:/client/client
    ports:
      - ${CLIENT_PORT}:${CLIENT_PORT}
    command: npm run dev
    depends_on:
      - postgres
    restart: unless-stopped
  api:
    container_name: ${COMPOSE_PROJECT_NAME}-api
    build:
      context: ./api
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - api:/api/api
    ports:
      - ${API_PORT}:${API_PORT}
    command: npm run start:dev
    depends_on:
      - postgres
    restart: unless-stopped
  postgres:
    container_name: postgres
    image: ${DBMS}:${DBMS_VERSION}
    env_file:
      - .env
    environment:
      PG_DATA: /var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - /var/lib/postgresql/data
    restart: unless-stopped